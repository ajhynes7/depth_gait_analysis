# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = 
    py37,
    doctest,
    test_unit,
    test_prop,
    lint_code,
    lint_docs,
    check_types,

skipsdist = True

[flake8]
ignore = 
    I101  # Alphabetical order in one import line
import-order-style = pycharm
max-line-length = 120
application-import-names = 
    analysis
    modules
    scripts
    tests

[coverage:run]
source =
    modules/

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if an error isn't run:
    raise ValueError

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:


[testenv:doctest]
deps =
    -r requirements/base.txt
    -r requirements/test.txt
commands =
    pytest --doctest-modules modules/ analysis/

[testenv:test_unit]
deps =
    -r requirements/base.txt
    -r requirements/test.txt
commands =
    pytest tests/unit/

[testenv:test_prop]
deps =
    -r requirements/base.txt
    -r requirements/test.txt
commands =
    pytest tests/property/

[testenv:format_code]
deps = 
    -r requirements/format.txt
commands = 
    black -S -l 120 analysis modules scripts

    # Use shorter line length for tests for readable pytest parametrization
    black -S -l 79 tests

[testenv:lint_code]
deps = 
    -r requirements/lint_code.txt
commands = 
    flake8 analysis modules scripts tests

[testenv:lint_docs]
deps = 
    -r requirements/lint_docs.txt
commands =
    pydocstyle analysis modules --convention=numpy --add-ignore=D104,D202

[testenv:check_types]
deps = 
    -r requirements/base.txt
    -r requirements/types.txt
commands =
    mypy modules/ analysis/